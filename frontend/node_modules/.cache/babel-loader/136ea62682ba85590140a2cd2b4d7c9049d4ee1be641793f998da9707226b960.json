{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Patryk\\\\Desktop\\\\Files\\\\Education\\\\PROJEKT\\\\flightmanagement\\\\frontend\\\\src\\\\WeatherForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherForm = ({\n  fetchWeather\n}) => {\n  _s();\n  const [cityName, setCityName] = useState('');\n  const [temperature, setTemperature] = useState('');\n  const [condition, setCondition] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const weatherData = {\n      cityName,\n      temperature,\n      condition\n    };\n    try {\n      await axios.post('http://localhost:8080/weather/create', weatherData);\n      fetchWeather(); // Ponownie pobieramy pogodę po dodaniu nowego rekordu\n      setCityName('');\n      setTemperature('');\n      setCondition('');\n    } catch (error) {\n      console.error('Błąd podczas dodawania pogody:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dodaj prognoz\\u0119 pogody\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Miasto:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: cityName,\n          onChange: e => setCityName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Temperatura (\\xB0C):\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: temperature,\n          onChange: e => setTemperature(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Warunki:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: condition,\n          onChange: e => setCondition(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Dodaj pogod\\u0119\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(WeatherForm, \"6xXn+jvJWqXVd6bOWdhxQaAu374=\");\n_c = WeatherForm;\nexport default WeatherForm;\nvar _c;\n$RefreshReg$(_c, \"WeatherForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","WeatherForm","fetchWeather","_s","cityName","setCityName","temperature","setTemperature","condition","setCondition","handleSubmit","e","preventDefault","weatherData","post","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/Patryk/Desktop/Files/Education/PROJEKT/flightmanagement/frontend/src/WeatherForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst WeatherForm = ({ fetchWeather }) => {\r\n    const [cityName, setCityName] = useState('');\r\n    const [temperature, setTemperature] = useState('');\r\n    const [condition, setCondition] = useState('');\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const weatherData = {\r\n            cityName,\r\n            temperature,\r\n            condition,\r\n        };\r\n\r\n        try {\r\n            await axios.post('http://localhost:8080/weather/create', weatherData);\r\n            fetchWeather(); // Ponownie pobieramy pogodę po dodaniu nowego rekordu\r\n            setCityName('');\r\n            setTemperature('');\r\n            setCondition('');\r\n        } catch (error) {\r\n            console.error('Błąd podczas dodawania pogody:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Dodaj prognozę pogody</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <label>\r\n                    Miasto:\r\n                    <input\r\n                        type=\"text\"\r\n                        value={cityName}\r\n                        onChange={(e) => setCityName(e.target.value)}\r\n                        required\r\n                    />\r\n                </label>\r\n                <label>\r\n                    Temperatura (°C):\r\n                    <input\r\n                        type=\"number\"\r\n                        value={temperature}\r\n                        onChange={(e) => setTemperature(e.target.value)}\r\n                        required\r\n                    />\r\n                </label>\r\n                <label>\r\n                    Warunki:\r\n                    <input\r\n                        type=\"text\"\r\n                        value={condition}\r\n                        onChange={(e) => setCondition(e.target.value)}\r\n                        required\r\n                    />\r\n                </label>\r\n                <button type=\"submit\">Dodaj pogodę</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WeatherForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}