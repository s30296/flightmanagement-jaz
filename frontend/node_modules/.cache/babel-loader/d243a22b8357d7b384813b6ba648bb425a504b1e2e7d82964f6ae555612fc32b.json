{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Patryk\\\\Desktop\\\\Files\\\\Education\\\\PROJEKT\\\\flightmanagement\\\\frontend\\\\src\\\\FlightDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FlightDetails({\n  fetchFlightById,\n  flight\n}) {\n  _s();\n  const [id, setId] = useState('');\n  const [departureAirport, setDepartureAirport] = useState(null);\n  const [arrivalAirport, setArrivalAirport] = useState(null);\n  useEffect(() => {\n    // Tylko, gdy lot jest załadowany, pobieramy lotniska\n    if (flight) {\n      console.log(\"Dane lotu:\", flight); // Debugowanie danych lotu\n\n      // Sprawdzanie czy lotnisko odlotu jest dostępne i pobieramy dane\n      if (flight.departureAirport) {\n        setDepartureAirport(flight.departureAirport);\n      } else {\n        console.log(\"Brak danych o lotnisku odlotu\");\n      }\n\n      // Sprawdzanie czy lotnisko przylotu jest dostępne i pobieramy dane\n      if (flight.arrivalAirport) {\n        setArrivalAirport(flight.arrivalAirport);\n      } else {\n        console.log(\"Brak danych o lotnisku przylotu\");\n      }\n    }\n  }, [flight]); // Re-run if flight changes\n\n  const handleChange = e => {\n    setId(e.target.value);\n  };\n  const handleFetchFlight = () => {\n    const parsedId = parseInt(id, 10);\n    console.log(\"Przekazywane ID:\", parsedId); // Debugowanie ID\n\n    if (!isNaN(parsedId)) {\n      fetchFlightById(parsedId); // Fetch flight by ID\n    } else {\n      alert('Podaj poprawne ID lotu');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Szukaj lotu po ID\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: id,\n      onChange: handleChange,\n      placeholder: \"Wprowad\\u017A ID lotu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFetchFlight,\n      children: \"Pobierz lot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), flight ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Lot: \", flight.flightNumber]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Wylot: \", flight.departureTime]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", flight.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Lotnisko odlotu:\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"airport-details\",\n          children: departureAirport ? `${departureAirport.name}, ${departureAirport.city.name}, ${departureAirport.city.country}` : 'Ładowanie...'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Lotnisko przylotu:\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"airport-details\",\n          children: arrivalAirport ? `${arrivalAirport.name}, ${arrivalAirport.city.name}, ${arrivalAirport.city.country}` : 'Ładowanie...'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Nie znaleziono lotu o tym ID\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n_s(FlightDetails, \"5BwXqYqhewbl0JTs/7zoNta1shQ=\");\n_c = FlightDetails;\nexport default FlightDetails;\nvar _c;\n$RefreshReg$(_c, \"FlightDetails\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","FlightDetails","fetchFlightById","flight","_s","id","setId","departureAirport","setDepartureAirport","arrivalAirport","setArrivalAirport","console","log","handleChange","e","target","value","handleFetchFlight","parsedId","parseInt","isNaN","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","flightNumber","departureTime","status","className","name","city","country","_c","$RefreshReg$"],"sources":["C:/Users/Patryk/Desktop/Files/Education/PROJEKT/flightmanagement/frontend/src/FlightDetails.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction FlightDetails({ fetchFlightById, flight }) {\r\n    const [id, setId] = useState('');\r\n    const [departureAirport, setDepartureAirport] = useState(null);\r\n    const [arrivalAirport, setArrivalAirport] = useState(null);\r\n\r\n    useEffect(() => {\r\n        // Tylko, gdy lot jest załadowany, pobieramy lotniska\r\n        if (flight) {\r\n            console.log(\"Dane lotu:\", flight); // Debugowanie danych lotu\r\n\r\n            // Sprawdzanie czy lotnisko odlotu jest dostępne i pobieramy dane\r\n            if (flight.departureAirport) {\r\n                setDepartureAirport(flight.departureAirport);\r\n            } else {\r\n                console.log(\"Brak danych o lotnisku odlotu\");\r\n            }\r\n\r\n            // Sprawdzanie czy lotnisko przylotu jest dostępne i pobieramy dane\r\n            if (flight.arrivalAirport) {\r\n                setArrivalAirport(flight.arrivalAirport);\r\n            } else {\r\n                console.log(\"Brak danych o lotnisku przylotu\");\r\n            }\r\n        }\r\n    }, [flight]); // Re-run if flight changes\r\n\r\n    const handleChange = (e) => {\r\n        setId(e.target.value);\r\n    };\r\n\r\n    const handleFetchFlight = () => {\r\n        const parsedId = parseInt(id, 10);\r\n        console.log(\"Przekazywane ID:\", parsedId); // Debugowanie ID\r\n\r\n        if (!isNaN(parsedId)) {\r\n            fetchFlightById(parsedId);  // Fetch flight by ID\r\n        } else {\r\n            alert('Podaj poprawne ID lotu');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Szukaj lotu po ID</h2>\r\n            <input\r\n                type=\"text\"\r\n                value={id}\r\n                onChange={handleChange}\r\n                placeholder=\"Wprowadź ID lotu\"\r\n            />\r\n            <button onClick={handleFetchFlight}>Pobierz lot</button>\r\n\r\n            {flight ? (\r\n                <div>\r\n                    <h3>Lot: {flight.flightNumber}</h3>\r\n                    <p>Wylot: {flight.departureTime}</p>\r\n                    <p>Status: {flight.status}</p>\r\n\r\n                    {/* Display departure airport info if available */}\r\n                    <p>Lotnisko odlotu:\r\n                        <span className=\"airport-details\">\r\n        {departureAirport ? `${departureAirport.name}, ${departureAirport.city.name}, ${departureAirport.city.country}` : 'Ładowanie...'}\r\n    </span>\r\n                    </p>\r\n\r\n                    <p>Lotnisko przylotu:\r\n                        <span className=\"airport-details\">\r\n        {arrivalAirport ? `${arrivalAirport.name}, ${arrivalAirport.city.name}, ${arrivalAirport.city.country}` : 'Ładowanie...'}\r\n    </span>\r\n                    </p>\r\n                </div>\r\n            ) : (\r\n                <p>Nie znaleziono lotu o tym ID</p>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FlightDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}