{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Patryk\\\\Desktop\\\\Files\\\\Education\\\\PROJEKT\\\\flightmanagement\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport CityForm from './CityForm';\nimport CityList from './CityList';\nimport CityDetails from './CityDetails';\nimport AirportForm from './AirportForm';\nimport AirportList from './AirportList';\nimport AirportDetails from './AirportDetails';\nimport FlightForm from './FlightForm';\nimport FlightList from './FlightList';\nimport FlightDetails from './FlightDetails';\nimport PassengerForm from './PassengerForm';\nimport PassengerList from './PassengerList';\nimport PassengerDetails from './PassengerDetails';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [cities, setCities] = useState([]);\n  const [cityById, setCityById] = useState(null);\n  const [airports, setAirports] = useState([]);\n  const [airportById, setAirportById] = useState(null);\n  const [flights, setFlights] = useState([]);\n  const [flightById, setFlightById] = useState(null);\n  const [passengers, setPassengers] = useState([]);\n  const [passengerById, setPassengerById] = useState(null);\n  const [cityMessage, setCityMessage] = useState('');\n  const [airportMessage, setAirportMessage] = useState('');\n  const [flightMessage, setFlightMessage] = useState('');\n  const [passengerMessage, setPassengerMessage] = useState('');\n  const [weather, setWeather] = useState(null);\n  const [weatherMessage, setWeatherMessage] = useState('');\n  const [cityInput, setCityInput] = useState(''); // Stan dla wprowadzonego miasta przez użytkownika\n\n  useEffect(() => {\n    fetchCities();\n    fetchAirports();\n    fetchFlights();\n    fetchPassengers();\n    fetchWeather();\n  }, []);\n  const fetchCities = async () => {\n    try {\n      const response = await axios.get('http://localhost:8080/cities/getAllCities');\n      setCities(response.data);\n    } catch (error) {\n      console.error('Błąd pobierania miast:', error);\n      setCityMessage('Nie udało się pobrać miast.');\n    }\n  };\n  const fetchCityById = async id => {\n    try {\n      const response = await axios.get(`http://localhost:8080/cities/getCityById/${id}`);\n      setCityById(response.data);\n    } catch (error) {\n      console.error('Błąd pobierania miasta:', error);\n      setCityMessage('Nie udało się pobrać miasta.');\n    }\n  };\n  const fetchAirports = async () => {\n    try {\n      const response = await axios.get('http://localhost:8080/airports/getAllAirports');\n      setAirports(response.data);\n    } catch (error) {\n      console.error('Błąd pobierania lotnisk:', error);\n      setAirportMessage('Nie udało się pobrać lotnisk.');\n    }\n  };\n  const fetchAirportById = async id => {\n    try {\n      const response = await axios.get(`http://localhost:8080/airports/getAirportById/${id}`);\n      setAirportById(response.data);\n    } catch (error) {\n      console.error('Błąd pobierania lotniska:', error);\n      setAirportMessage('Nie udało się pobrać lotniska.');\n    }\n  };\n  const fetchFlights = async () => {\n    try {\n      const response = await axios.get('http://localhost:8080/flights/getAllFlights');\n      setFlights(response.data);\n    } catch (error) {\n      console.error('Błąd pobierania lotów:', error);\n      setFlightMessage('Nie udało się pobrać lotów.');\n    }\n  };\n  const fetchFlightById = async id => {\n    try {\n      const response = await axios.get(`http://localhost:8080/flights/getFlightById/${id}`);\n      setFlightById(response.data);\n    } catch (error) {\n      console.error('Błąd pobierania lotu:', error);\n      setFlightMessage('Nie udało się pobrać lotu.');\n    }\n  };\n  const fetchFlightsByStatus = async status => {\n    try {\n      const response = await axios.get(`http://localhost:8080/flights/getFlightsByStatus/${status}`);\n      setFlights(response.data);\n    } catch (error) {\n      console.error('Błąd pobierania lotów po statusie:', error);\n      setFlightMessage('Nie udało się pobrać lotów po statusie.');\n    }\n  };\n  const updateFlight = async (id, flightRequest) => {\n    try {\n      const response = await axios.put(`http://localhost:8080/flights/update/${id}`, flightRequest);\n      setFlightById(response.data);\n      alert('Lot zaktualizowany!');\n    } catch (error) {\n      console.error('Błąd podczas aktualizowania lotu:', error);\n      alert('Nie udało się zaktualizować lotu.');\n    }\n  };\n  const deleteFlight = async id => {\n    try {\n      await axios.delete(`http://localhost:8080/flights/delete/${id}`);\n      setFlightById(null);\n      alert('Lot usunięty!');\n      fetchFlights(); // Ponowne załadowanie listy lotów\n    } catch (error) {\n      console.error('Błąd podczas usuwania lotu:', error);\n      alert('Nie udało się usunąć lotu.');\n    }\n  };\n\n  // Pasażerowie\n  const fetchPassengers = async () => {\n    try {\n      const response = await axios.get('http://localhost:8080/passengers/getAllPassengers');\n      setPassengers(response.data);\n    } catch (error) {\n      console.error('Błąd pobierania pasażerów:', error);\n      setPassengerMessage('Nie udało się pobrać pasażerów.');\n    }\n  };\n  const fetchPassengerById = async id => {\n    try {\n      const response = await axios.get(`http://localhost:8080/passengers/getPassengerById/${id}`);\n      setPassengerById(response.data);\n    } catch (error) {\n      console.error('Błąd pobierania pasażera:', error);\n      setPassengerMessage('Nie udało się pobrać pasażera.');\n    }\n  };\n  const createPassenger = async passengerRequest => {\n    try {\n      const response = await axios.post('http://localhost:8080/passengers/create', passengerRequest);\n      alert('Pasażer został dodany!');\n      fetchPassengers(); // Odświeżenie listy pasażerów po dodaniu\n    } catch (error) {\n      console.error('Błąd podczas dodawania pasażera:', error);\n      alert('Nie udało się dodać pasażera.');\n    }\n  };\n  const updatePassenger = async (id, passengerRequest) => {\n    try {\n      const response = await axios.put(`http://localhost:8080/passengers/update/${id}`, passengerRequest);\n      alert('Pasażer został zaktualizowany!');\n      fetchPassengerById(id); // Odświeżenie danych pasażera\n    } catch (error) {\n      console.error('Błąd podczas aktualizowania pasażera:', error);\n      alert('Nie udało się zaktualizować pasażera.');\n    }\n  };\n  const deletePassenger = async id => {\n    try {\n      await axios.delete(`http://localhost:8080/passengers/delete/${id}`);\n      alert('Pasażer został usunięty!');\n      fetchPassengers(); // Odświeżenie listy po usunięciu\n    } catch (error) {\n      console.error('Błąd podczas usuwania pasażera:', error);\n      alert('Nie udało się usunąć pasażera.');\n    }\n  };\n\n  // Pogoda\n  const fetchWeather = async () => {\n    try {\n      const response = await axios.get('http://localhost:8080/weather/getAllWeather');\n      setWeather(response.data);\n    } catch (error) {\n      console.error('Błąd pobierania pogody:', error);\n      setWeatherMessage('Nie udało się pobrać danych pogodowych.');\n    }\n  };\n  const fetchWeatherByCity = async city => {\n    try {\n      const response = await axios.get(`http://localhost:8080/weather/${city}`);\n      setWeather(response.data);\n    } catch (error) {\n      console.error('Błąd pobierania pogody miasta:', error);\n      setWeatherMessage('Nie udało się pobrać pogody miasta.');\n    }\n  };\n  const handleCityInputChange = e => {\n    setCityInput(e.target.value); // Zmieniamy stan w odpowiedzi na wprowadzenie tekstu\n  };\n  const handleFetchWeather = () => {\n    if (cityInput) {\n      fetchWeatherByCity(cityInput); // Używamy dynamicznego miasta\n    } else {\n      setWeatherMessage('Proszę podać nazwę miasta.');\n    }\n  };\n  const renderWeatherTable = data => {\n    const keys = Object.keys(data[0]); // Pobierz klucze z pierwszego obiektu w tablicy\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-output\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: keys.map(key => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: key\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: data.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: keys.map(key => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item[key]\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 33\n            }, this))\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Miasta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }, this), cityMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: cityMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(CityList, {\n        cities: cities\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CityForm, {\n        fetchCities: fetchCities\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CityDetails, {\n        city: cityById\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Lotniska\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 17\n      }, this), airportMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: airportMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(AirportList, {\n        airports: airports\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AirportForm, {\n        fetchAirports: fetchAirports\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AirportDetails, {\n        airport: airportById\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bottom-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }, this), flightMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: flightMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 35\n      }, this), /*#__PURE__*/_jsxDEV(FlightList, {\n        flights: flights\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FlightForm, {\n        fetchFlights: fetchFlights\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FlightDetails, {\n        flight: flightById\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bottom-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Pasa\\u017Cerowie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 17\n      }, this), passengerMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: passengerMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(PassengerList, {\n        passengers: passengers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PassengerForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PassengerDetails, {\n        passenger: passengerById\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bottom-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Pogoda\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 17\n      }, this), weatherMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: weatherMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Wpisz miasto\",\n          value: cityInput,\n          onChange: handleCityInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleFetchWeather,\n          children: \"Pogoda dla miasta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 17\n      }, this), weather && renderWeatherTable(weather), \"  \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 249,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"mr1FGZkxXLt0UhrZQdXT45ob9ts=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","CityForm","CityList","CityDetails","AirportForm","AirportList","AirportDetails","FlightForm","FlightList","FlightDetails","PassengerForm","PassengerList","PassengerDetails","jsxDEV","_jsxDEV","App","_s","cities","setCities","cityById","setCityById","airports","setAirports","airportById","setAirportById","flights","setFlights","flightById","setFlightById","passengers","setPassengers","passengerById","setPassengerById","cityMessage","setCityMessage","airportMessage","setAirportMessage","flightMessage","setFlightMessage","passengerMessage","setPassengerMessage","weather","setWeather","weatherMessage","setWeatherMessage","cityInput","setCityInput","fetchCities","fetchAirports","fetchFlights","fetchPassengers","fetchWeather","response","get","data","error","console","fetchCityById","id","fetchAirportById","fetchFlightById","fetchFlightsByStatus","status","updateFlight","flightRequest","put","alert","deleteFlight","delete","fetchPassengerById","createPassenger","passengerRequest","post","updatePassenger","deletePassenger","fetchWeatherByCity","city","handleCityInputChange","e","target","value","handleFetchWeather","renderWeatherTable","keys","Object","className","children","map","key","fileName","_jsxFileName","lineNumber","columnNumber","item","index","airport","flight","passenger","type","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Patryk/Desktop/Files/Education/PROJEKT/flightmanagement/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport CityForm from './CityForm';\nimport CityList from './CityList';\nimport CityDetails from './CityDetails';\nimport AirportForm from './AirportForm';\nimport AirportList from './AirportList';\nimport AirportDetails from './AirportDetails';\nimport FlightForm from './FlightForm';\nimport FlightList from './FlightList';\nimport FlightDetails from './FlightDetails';\nimport PassengerForm from './PassengerForm';\nimport PassengerList from './PassengerList';\nimport PassengerDetails from './PassengerDetails';\nimport './App.css';\n\nfunction App() {\n    const [cities, setCities] = useState([]);\n    const [cityById, setCityById] = useState(null);\n    const [airports, setAirports] = useState([]);\n    const [airportById, setAirportById] = useState(null);\n    const [flights, setFlights] = useState([]);\n    const [flightById, setFlightById] = useState(null);\n    const [passengers, setPassengers] = useState([]);\n    const [passengerById, setPassengerById] = useState(null);\n    const [cityMessage, setCityMessage] = useState('');\n    const [airportMessage, setAirportMessage] = useState('');\n    const [flightMessage, setFlightMessage] = useState('');\n    const [passengerMessage, setPassengerMessage] = useState('');\n    const [weather, setWeather] = useState(null);\n    const [weatherMessage, setWeatherMessage] = useState('');\n    const [cityInput, setCityInput] = useState('');  // Stan dla wprowadzonego miasta przez użytkownika\n\n    useEffect(() => {\n        fetchCities();\n        fetchAirports();\n        fetchFlights();\n        fetchPassengers();\n        fetchWeather();\n    }, []);\n\n    const fetchCities = async () => {\n        try {\n            const response = await axios.get('http://localhost:8080/cities/getAllCities');\n            setCities(response.data);\n        } catch (error) {\n            console.error('Błąd pobierania miast:', error);\n            setCityMessage('Nie udało się pobrać miast.');\n        }\n    };\n\n    const fetchCityById = async (id) => {\n        try {\n            const response = await axios.get(`http://localhost:8080/cities/getCityById/${id}`);\n            setCityById(response.data);\n        } catch (error) {\n            console.error('Błąd pobierania miasta:', error);\n            setCityMessage('Nie udało się pobrać miasta.');\n        }\n    };\n\n    const fetchAirports = async () => {\n        try {\n            const response = await axios.get('http://localhost:8080/airports/getAllAirports');\n            setAirports(response.data);\n        } catch (error) {\n            console.error('Błąd pobierania lotnisk:', error);\n            setAirportMessage('Nie udało się pobrać lotnisk.');\n        }\n    };\n\n    const fetchAirportById = async (id) => {\n        try {\n            const response = await axios.get(`http://localhost:8080/airports/getAirportById/${id}`);\n            setAirportById(response.data);\n        } catch (error) {\n            console.error('Błąd pobierania lotniska:', error);\n            setAirportMessage('Nie udało się pobrać lotniska.');\n        }\n    };\n\n    const fetchFlights = async () => {\n        try {\n            const response = await axios.get('http://localhost:8080/flights/getAllFlights');\n            setFlights(response.data);\n        } catch (error) {\n            console.error('Błąd pobierania lotów:', error);\n            setFlightMessage('Nie udało się pobrać lotów.');\n        }\n    };\n\n    const fetchFlightById = async (id) => {\n        try {\n            const response = await axios.get(`http://localhost:8080/flights/getFlightById/${id}`);\n            setFlightById(response.data);\n        } catch (error) {\n            console.error('Błąd pobierania lotu:', error);\n            setFlightMessage('Nie udało się pobrać lotu.');\n        }\n    };\n\n    const fetchFlightsByStatus = async (status) => {\n        try {\n            const response = await axios.get(`http://localhost:8080/flights/getFlightsByStatus/${status}`);\n            setFlights(response.data);\n        } catch (error) {\n            console.error('Błąd pobierania lotów po statusie:', error);\n            setFlightMessage('Nie udało się pobrać lotów po statusie.');\n        }\n    };\n\n    const updateFlight = async (id, flightRequest) => {\n        try {\n            const response = await axios.put(`http://localhost:8080/flights/update/${id}`, flightRequest);\n            setFlightById(response.data);\n            alert('Lot zaktualizowany!');\n        } catch (error) {\n            console.error('Błąd podczas aktualizowania lotu:', error);\n            alert('Nie udało się zaktualizować lotu.');\n        }\n    };\n\n    const deleteFlight = async (id) => {\n        try {\n            await axios.delete(`http://localhost:8080/flights/delete/${id}`);\n            setFlightById(null);\n            alert('Lot usunięty!');\n            fetchFlights(); // Ponowne załadowanie listy lotów\n        } catch (error) {\n            console.error('Błąd podczas usuwania lotu:', error);\n            alert('Nie udało się usunąć lotu.');\n        }\n    };\n\n    // Pasażerowie\n    const fetchPassengers = async () => {\n        try {\n            const response = await axios.get('http://localhost:8080/passengers/getAllPassengers');\n            setPassengers(response.data);\n        } catch (error) {\n            console.error('Błąd pobierania pasażerów:', error);\n            setPassengerMessage('Nie udało się pobrać pasażerów.');\n        }\n    };\n\n    const fetchPassengerById = async (id) => {\n        try {\n            const response = await axios.get(`http://localhost:8080/passengers/getPassengerById/${id}`);\n            setPassengerById(response.data);\n        } catch (error) {\n            console.error('Błąd pobierania pasażera:', error);\n            setPassengerMessage('Nie udało się pobrać pasażera.');\n        }\n    };\n\n    const createPassenger = async (passengerRequest) => {\n        try {\n            const response = await axios.post('http://localhost:8080/passengers/create', passengerRequest);\n            alert('Pasażer został dodany!');\n            fetchPassengers(); // Odświeżenie listy pasażerów po dodaniu\n        } catch (error) {\n            console.error('Błąd podczas dodawania pasażera:', error);\n            alert('Nie udało się dodać pasażera.');\n        }\n    };\n\n    const updatePassenger = async (id, passengerRequest) => {\n        try {\n            const response = await axios.put(`http://localhost:8080/passengers/update/${id}`, passengerRequest);\n            alert('Pasażer został zaktualizowany!');\n            fetchPassengerById(id); // Odświeżenie danych pasażera\n        } catch (error) {\n            console.error('Błąd podczas aktualizowania pasażera:', error);\n            alert('Nie udało się zaktualizować pasażera.');\n        }\n    };\n\n    const deletePassenger = async (id) => {\n        try {\n            await axios.delete(`http://localhost:8080/passengers/delete/${id}`);\n            alert('Pasażer został usunięty!');\n            fetchPassengers(); // Odświeżenie listy po usunięciu\n        } catch (error) {\n            console.error('Błąd podczas usuwania pasażera:', error);\n            alert('Nie udało się usunąć pasażera.');\n        }\n    };\n\n    // Pogoda\n    const fetchWeather = async () => {\n        try {\n            const response = await axios.get('http://localhost:8080/weather/getAllWeather');\n            setWeather(response.data);\n        } catch (error) {\n            console.error('Błąd pobierania pogody:', error);\n            setWeatherMessage('Nie udało się pobrać danych pogodowych.');\n        }\n    };\n\n    const fetchWeatherByCity = async (city) => {\n        try {\n            const response = await axios.get(`http://localhost:8080/weather/${city}`);\n            setWeather(response.data);\n        } catch (error) {\n            console.error('Błąd pobierania pogody miasta:', error);\n            setWeatherMessage('Nie udało się pobrać pogody miasta.');\n        }\n    };\n\n    const handleCityInputChange = (e) => {\n        setCityInput(e.target.value);  // Zmieniamy stan w odpowiedzi na wprowadzenie tekstu\n    };\n\n    const handleFetchWeather = () => {\n        if (cityInput) {\n            fetchWeatherByCity(cityInput);  // Używamy dynamicznego miasta\n        } else {\n            setWeatherMessage('Proszę podać nazwę miasta.');\n        }\n    };\n\n    const renderWeatherTable = (data) => {\n        const keys = Object.keys(data[0]); // Pobierz klucze z pierwszego obiektu w tablicy\n        return (\n            <div className=\"weather-output\">\n                <table>\n                    <thead>\n                    <tr>\n                        {keys.map((key) => (\n                            <th key={key}>{key}</th>\n                        ))}\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {data.map((item, index) => (\n                        <tr key={index}>\n                            {keys.map((key) => (\n                                <td key={key}>{item[key]}</td>\n                            ))}\n                        </tr>\n                    ))}\n                    </tbody>\n                </table>\n            </div>\n        );\n    };\n\n    return (\n        <div className=\"App\">\n            <div className=\"left-column\">\n                <h1>Miasta</h1>\n                {cityMessage && <p>{cityMessage}</p>}\n                <CityList cities={cities} />\n                <CityForm fetchCities={fetchCities} />\n                <CityDetails city={cityById} />\n            </div>\n\n            <div className=\"right-column\">\n                <h1>Lotniska</h1>\n                {airportMessage && <p>{airportMessage}</p>}\n                <AirportList airports={airports} />\n                <AirportForm fetchAirports={fetchAirports} />\n                <AirportDetails airport={airportById} />\n            </div>\n\n            <div className=\"bottom-row\">\n                <h1>Loty</h1>\n                {flightMessage && <p>{flightMessage}</p>}\n                <FlightList flights={flights} />\n                <FlightForm fetchFlights={fetchFlights} />\n                <FlightDetails flight={flightById} />\n            </div>\n\n            <div className=\"bottom-row\">\n                <h1>Pasażerowie</h1>\n                {passengerMessage && <p>{passengerMessage}</p>}\n                <PassengerList passengers={passengers} />\n                <PassengerForm />\n                <PassengerDetails passenger={passengerById} />\n            </div>\n\n            <div className=\"bottom-row\">\n                <h1>Pogoda</h1>\n                {weatherMessage && <p>{weatherMessage}</p>}\n                <div className=\"weather-section\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"Wpisz miasto\"\n                        value={cityInput}\n                        onChange={handleCityInputChange}\n                    />\n                    <button onClick={handleFetchWeather}>Pogoda dla miasta</button>\n                </div>\n                {weather && renderWeatherTable(weather)}  {/* Zmienione, aby wyświetlić tabelę */}\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}