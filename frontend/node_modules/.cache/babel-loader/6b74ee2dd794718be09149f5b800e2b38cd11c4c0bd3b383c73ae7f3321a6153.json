{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Patryk\\\\Desktop\\\\Files\\\\Education\\\\PROJEKT\\\\flightmanagement\\\\frontend\\\\src\\\\FlightDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FlightDetails({\n  fetchFlightById,\n  flight\n}) {\n  _s();\n  const [id, setId] = useState('');\n  const [departureAirport, setDepartureAirport] = useState(null);\n  const [arrivalAirport, setArrivalAirport] = useState(null);\n  const [notFound, setNotFound] = useState(false); // Stan kontrolujący komunikat \"Nie znaleziono lotu\"\n  const [loading, setLoading] = useState(false); // Stan kontrolujący ładowanie\n\n  // Zmieniamy logikę useEffect\n  useEffect(() => {\n    if (flight) {\n      // Resetujemy stan błędu, jeśli lot został załadowany\n      setNotFound(false);\n      setLoading(false); // Zatrzymujemy ładowanie po pobraniu danych lotu\n\n      // Sprawdzamy dostępność lotnisk\n      if (flight.departureAirport) {\n        setDepartureAirport(flight.departureAirport);\n      } else {\n        console.log(\"Brak danych o lotnisku odlotu\");\n      }\n      if (flight.arrivalAirport) {\n        setArrivalAirport(flight.arrivalAirport);\n      } else {\n        console.log(\"Brak danych o lotnisku przylotu\");\n      }\n    }\n  }, [flight]); // Uruchamia się tylko po załadowaniu lotu\n\n  const handleChange = e => {\n    setId(e.target.value);\n    setNotFound(false); // Resetujemy komunikat o błędzie, gdy użytkownik zmienia ID\n  };\n  const handleFetchFlight = async () => {\n    const parsedId = parseInt(id, 10);\n    console.log(\"Przekazywane ID:\", parsedId);\n    if (!isNaN(parsedId)) {\n      setNotFound(false); // Resetujemy komunikat przed wysłaniem zapytania\n      setLoading(true); // Ustawiamy stan ładowania, zanim fetch zostanie wykonane\n\n      try {\n        // Fetchujemy lot\n        const flightData = await fetchFlightById(parsedId);\n\n        // Jeśli nie znaleziono lotu\n        if (!flightData) {\n          setNotFound(true); // Ustawiamy błąd, gdy lotu nie ma\n        }\n      } catch (error) {\n        console.error('Błąd podczas pobierania lotu:', error);\n        setNotFound(true); // Ustawiamy błąd, jeśli wystąpił błąd w fetch\n      }\n      setLoading(false); // Zatrzymujemy ładowanie po zakończeniu fetch\n    } else {\n      alert('Podaj poprawne ID lotu');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Szukaj lotu po ID\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: id,\n      onChange: handleChange,\n      placeholder: \"Wprowad\\u017A ID lotu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFetchFlight,\n      children: \"Pobierz lot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), notFound && !loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Nie znaleziono lotu o tym ID\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 38\n    }, this), \" \", flight ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Lot: \", flight.flightNumber]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Wylot: \", flight.departureTime]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", flight.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Lotnisko odlotu: \", departureAirport ? `${departureAirport.name}, ${departureAirport.city.name}, ${departureAirport.city.country}` : 'Ładowanie...']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Lotnisko przylotu: \", arrivalAirport ? `${arrivalAirport.name}, ${arrivalAirport.city.name}, ${arrivalAirport.city.country}` : 'Ładowanie...']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this) :\n    /*#__PURE__*/\n    // Jeśli lotu nie ma i użytkownik nie wyszukał jeszcze lotu\n    _jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n_s(FlightDetails, \"YGJCIiZfv0MHNh8Vnt7KeScwB+A=\");\n_c = FlightDetails;\nexport default FlightDetails;\na;\nvar _c;\n$RefreshReg$(_c, \"FlightDetails\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","FlightDetails","fetchFlightById","flight","_s","id","setId","departureAirport","setDepartureAirport","arrivalAirport","setArrivalAirport","notFound","setNotFound","loading","setLoading","console","log","handleChange","e","target","value","handleFetchFlight","parsedId","parseInt","isNaN","flightData","error","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","flightNumber","departureTime","status","name","city","country","_c","a","$RefreshReg$"],"sources":["C:/Users/Patryk/Desktop/Files/Education/PROJEKT/flightmanagement/frontend/src/FlightDetails.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction FlightDetails({ fetchFlightById, flight }) {\r\n    const [id, setId] = useState('');\r\n    const [departureAirport, setDepartureAirport] = useState(null);\r\n    const [arrivalAirport, setArrivalAirport] = useState(null);\r\n    const [notFound, setNotFound] = useState(false); // Stan kontrolujący komunikat \"Nie znaleziono lotu\"\r\n    const [loading, setLoading] = useState(false); // Stan kontrolujący ładowanie\r\n\r\n    // Zmieniamy logikę useEffect\r\n    useEffect(() => {\r\n        if (flight) {\r\n            // Resetujemy stan błędu, jeśli lot został załadowany\r\n            setNotFound(false);\r\n            setLoading(false); // Zatrzymujemy ładowanie po pobraniu danych lotu\r\n\r\n            // Sprawdzamy dostępność lotnisk\r\n            if (flight.departureAirport) {\r\n                setDepartureAirport(flight.departureAirport);\r\n            } else {\r\n                console.log(\"Brak danych o lotnisku odlotu\");\r\n            }\r\n\r\n            if (flight.arrivalAirport) {\r\n                setArrivalAirport(flight.arrivalAirport);\r\n            } else {\r\n                console.log(\"Brak danych o lotnisku przylotu\");\r\n            }\r\n        }\r\n    }, [flight]); // Uruchamia się tylko po załadowaniu lotu\r\n\r\n    const handleChange = (e) => {\r\n        setId(e.target.value);\r\n        setNotFound(false); // Resetujemy komunikat o błędzie, gdy użytkownik zmienia ID\r\n    };\r\n\r\n    const handleFetchFlight = async () => {\r\n        const parsedId = parseInt(id, 10);\r\n        console.log(\"Przekazywane ID:\", parsedId);\r\n\r\n        if (!isNaN(parsedId)) {\r\n            setNotFound(false);  // Resetujemy komunikat przed wysłaniem zapytania\r\n            setLoading(true); // Ustawiamy stan ładowania, zanim fetch zostanie wykonane\r\n\r\n            try {\r\n                // Fetchujemy lot\r\n                const flightData = await fetchFlightById(parsedId);\r\n\r\n                // Jeśli nie znaleziono lotu\r\n                if (!flightData) {\r\n                    setNotFound(true);  // Ustawiamy błąd, gdy lotu nie ma\r\n                }\r\n            } catch (error) {\r\n                console.error('Błąd podczas pobierania lotu:', error);\r\n                setNotFound(true);  // Ustawiamy błąd, jeśli wystąpił błąd w fetch\r\n            }\r\n\r\n            setLoading(false); // Zatrzymujemy ładowanie po zakończeniu fetch\r\n        } else {\r\n            alert('Podaj poprawne ID lotu');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Szukaj lotu po ID</h2>\r\n            <input\r\n                type=\"text\"\r\n                value={id}\r\n                onChange={handleChange}\r\n                placeholder=\"Wprowadź ID lotu\"\r\n            />\r\n            <button onClick={handleFetchFlight}>Pobierz lot</button>\r\n\r\n            {/* Komunikat o błędzie tylko po kliknięciu przycisku i braku lotu */}\r\n            {notFound && !loading && <p>Nie znaleziono lotu o tym ID</p>} {/* Wyświetlamy tylko po kliknięciu przycisku */}\r\n\r\n            {flight ? (\r\n                <div>\r\n                    <h3>Lot: {flight.flightNumber}</h3>\r\n                    <p>Wylot: {flight.departureTime}</p>\r\n                    <p>Status: {flight.status}</p>\r\n\r\n                    {/* Display departure airport info if available */}\r\n                    <p>Lotnisko\r\n                        odlotu: {departureAirport ? `${departureAirport.name}, ${departureAirport.city.name}, ${departureAirport.city.country}` : 'Ładowanie...'}</p>\r\n\r\n                    <p>Lotnisko\r\n                        przylotu: {arrivalAirport ? `${arrivalAirport.name}, ${arrivalAirport.city.name}, ${arrivalAirport.city.country}` : 'Ładowanie...'}</p>\r\n\r\n                </div>\r\n            ) : (\r\n                // Jeśli lotu nie ma i użytkownik nie wyszukał jeszcze lotu\r\n                <div></div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FlightDetails;\r\na"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}