{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Patryk\\\\Desktop\\\\Files\\\\Education\\\\PROJEKT\\\\flightmanagement\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport CityForm from './CityForm';\nimport CityList from './CityList';\nimport CityDetails from './CityDetails';\nimport AirportForm from './AirportForm';\nimport AirportList from './AirportList';\nimport AirportDetails from './AirportDetails';\nimport FlightForm from './FlightForm';\nimport FlightList from './FlightList';\nimport FlightDetails from './FlightDetails';\nimport PassengerForm from './PassengerForm';\nimport PassengerList from './PassengerList';\nimport PassengerDetails from './PassengerDetails';\nimport WeatherForm from './WeatherForm'; // Nowy komponent\nimport WeatherList from './WeatherList'; // Nowy komponent\nimport WeatherDetails from './WeatherDetails'; // Nowy komponent\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [cities, setCities] = useState([]);\n  const [cityById, setCityById] = useState(null);\n  const [airports, setAirports] = useState([]);\n  const [airportById, setAirportById] = useState(null);\n  const [flights, setFlights] = useState([]);\n  const [flightById, setFlightById] = useState(null);\n  const [passengers, setPassengers] = useState([]);\n  const [passengerById, setPassengerById] = useState(null);\n  const [cityMessage, setCityMessage] = useState('');\n  const [airportMessage, setAirportMessage] = useState('');\n  const [flightMessage, setFlightMessage] = useState('');\n  const [passengerMessage, setPassengerMessage] = useState('');\n  const [weatherMessage, setWeatherMessage] = useState('');\n  useEffect(() => {\n    fetchCities();\n    fetchAirports();\n    fetchFlights();\n    fetchPassengers();\n  }, []);\n  const fetchWeather = async () => {\n    try {\n      const response = await axios.get('http://localhost:8080/weather/getAllWeather');\n      setWeather(response.data);\n    } catch (error) {\n      console.error('Błąd pobierania prognoz pogodowych:', error);\n      setWeatherMessage('Nie udało się pobrać danych pogodowych.');\n    }\n  };\n  const fetchWeatherByCity = async city => {\n    try {\n      const response = await axios.get(`http://localhost:8080/weather/${city}`);\n      setWeatherByCity(response.data);\n    } catch (error) {\n      console.error(`Błąd pobierania pogody dla miasta ${city}:`, error);\n      setWeatherMessage(`Nie udało się pobrać pogody dla miasta ${city}.`);\n    }\n  };\n  const fetchLatestWeather = async city => {\n    try {\n      const response = await axios.get(`http://localhost:8080/weather/getLatestWeather/${city}`);\n      setWeatherByCity(response.data);\n    } catch (error) {\n      console.error(`Błąd pobierania najnowszej pogody dla miasta ${city}:`, error);\n      setWeatherMessage(`Nie udało się pobrać najnowszej pogody dla miasta ${city}.`);\n    }\n  };\n  const deleteAllWeather = async () => {\n    try {\n      await axios.delete('http://localhost:8080/weather/deleteAllWeather');\n      alert('Wszystkie rekordy pogodowe zostały usunięte!');\n      fetchWeather(); // Ponowne pobranie danych po usunięciu\n    } catch (error) {\n      console.error('Błąd podczas usuwania rekordów pogodowych:', error);\n      alert('Nie udało się usunąć wszystkich rekordów pogodowych.');\n    }\n  };\n  const fetchCities = async () => {\n    try {\n      const response = await axios.get('http://localhost:8080/cities/getAllCities');\n      setCities(response.data);\n    } catch (error) {\n      console.error('Błąd pobierania miast:', error);\n      setCityMessage('Nie udało się pobrać miast.');\n    }\n  };\n  const fetchCityById = async id => {\n    try {\n      const response = await axios.get(`http://localhost:8080/cities/getCityById/${id}`);\n      setCityById(response.data);\n    } catch (error) {\n      console.error('Błąd pobierania miasta:', error);\n      setCityMessage('Nie udało się pobrać miasta.');\n    }\n  };\n  const fetchAirports = async () => {\n    try {\n      const response = await axios.get('http://localhost:8080/airports/getAllAirports');\n      setAirports(response.data);\n    } catch (error) {\n      console.error('Błąd pobierania lotnisk:', error);\n      setAirportMessage('Nie udało się pobrać lotnisk.');\n    }\n  };\n  const fetchAirportById = async id => {\n    try {\n      const response = await axios.get(`http://localhost:8080/airports/getAirportById/${id}`);\n      setAirportById(response.data);\n    } catch (error) {\n      console.error('Błąd pobierania lotniska:', error);\n      setAirportMessage('Nie udało się pobrać lotniska.');\n    }\n  };\n  const fetchFlights = async () => {\n    try {\n      const response = await axios.get('http://localhost:8080/flights/getAllFlights');\n      setFlights(response.data);\n    } catch (error) {\n      console.error('Błąd pobierania lotów:', error);\n      setFlightMessage('Nie udało się pobrać lotów.');\n    }\n  };\n  const fetchFlightById = async id => {\n    try {\n      const response = await axios.get(`http://localhost:8080/flights/getFlightById/${id}`);\n      setFlightById(response.data);\n    } catch (error) {\n      console.error('Błąd pobierania lotu:', error);\n      setFlightMessage('Nie udało się pobrać lotu.');\n    }\n  };\n  const fetchFlightsByStatus = async status => {\n    try {\n      const response = await axios.get(`http://localhost:8080/flights/getFlightsByStatus/${status}`);\n      setFlights(response.data);\n    } catch (error) {\n      console.error('Błąd pobierania lotów po statusie:', error);\n      setFlightMessage('Nie udało się pobrać lotów po statusie.');\n    }\n  };\n  const updateFlight = async (id, flightRequest) => {\n    try {\n      const response = await axios.put(`http://localhost:8080/flights/update/${id}`, flightRequest);\n      setFlightById(response.data);\n      alert('Lot zaktualizowany!');\n    } catch (error) {\n      console.error('Błąd podczas aktualizowania lotu:', error);\n      alert('Nie udało się zaktualizować lotu.');\n    }\n  };\n  const deleteFlight = async id => {\n    try {\n      await axios.delete(`http://localhost:8080/flights/delete/${id}`);\n      setFlightById(null);\n      alert('Lot usunięty!');\n      fetchFlights(); // Ponowne załadowanie listy lotów\n    } catch (error) {\n      console.error('Błąd podczas usuwania lotu:', error);\n      alert('Nie udało się usunąć lotu.');\n    }\n  };\n\n  // Pasażerowie\n  const fetchPassengers = async () => {\n    try {\n      const response = await axios.get('http://localhost:8080/passengers/getAllPassengers');\n      setPassengers(response.data);\n    } catch (error) {\n      console.error('Błąd pobierania pasażerów:', error);\n      setPassengerMessage('Nie udało się pobrać pasażerów.');\n    }\n  };\n  const fetchPassengerById = async id => {\n    try {\n      const response = await axios.get(`http://localhost:8080/passengers/getPassengerById/${id}`);\n      setPassengerById(response.data);\n    } catch (error) {\n      console.error('Błąd pobierania pasażera:', error);\n      setPassengerMessage('Nie udało się pobrać pasażera.');\n    }\n  };\n  const createPassenger = async passengerRequest => {\n    try {\n      const response = await axios.post('http://localhost:8080/passengers/create', passengerRequest);\n      alert('Pasażer został dodany!');\n      fetchPassengers(); // Odświeżenie listy pasażerów po dodaniu\n    } catch (error) {\n      console.error('Błąd podczas dodawania pasażera:', error);\n      alert('Nie udało się dodać pasażera.');\n    }\n  };\n  const updatePassenger = async (id, passengerRequest) => {\n    try {\n      const response = await axios.put(`http://localhost:8080/passengers/update/${id}`, passengerRequest);\n      alert('Pasażer został zaktualizowany!');\n      fetchPassengerById(id); // Odświeżenie danych pasażera\n    } catch (error) {\n      console.error('Błąd podczas aktualizowania pasażera:', error);\n      alert('Nie udało się zaktualizować pasażera.');\n    }\n  };\n  const deletePassenger = async id => {\n    try {\n      await axios.delete(`http://localhost:8080/passengers/delete/${id}`);\n      alert('Pasażer został usunięty!');\n      fetchPassengers(); // Odświeżenie listy po usunięciu\n    } catch (error) {\n      console.error('Błąd podczas usuwania pasażera:', error);\n      alert('Nie udało się usunąć pasażera.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Miasta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }, this), cityMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: cityMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(CityList, {\n        cities: cities\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CityForm, {\n        fetchCities: fetchCities\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CityDetails, {\n        fetchCityById: fetchCityById,\n        city: cityById\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Lotniska\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 17\n      }, this), airportMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: airportMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(AirportList, {\n        airports: airports\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AirportForm, {\n        fetchAirports: fetchAirports\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AirportDetails, {\n        fetchAirportById: fetchAirportById,\n        airport: airportById\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bottom-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }, this), flightMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: flightMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 35\n      }, this), /*#__PURE__*/_jsxDEV(FlightList, {\n        flights: flights\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FlightForm, {\n        fetchFlights: fetchFlights\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FlightDetails, {\n        fetchFlightById: fetchFlightById,\n        flight: flightById,\n        updateFlight: updateFlight,\n        deleteFlight: deleteFlight // Przekazanie funkcji usuwania lotu\n        ,\n        fetchFlightsByStatus: fetchFlightsByStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bottom-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Pasa\\u017Cerowie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }, this), passengerMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: passengerMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(PassengerList, {\n        passengers: passengers,\n        fetchPassengerById: fetchPassengerById,\n        deletePassenger: deletePassenger\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PassengerForm, {\n        createPassenger: createPassenger\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PassengerDetails, {\n        passenger: passengerById,\n        updatePassenger: updatePassenger\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"y5awlN5EQJEV6xAtkSieelzhXqk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","CityForm","CityList","CityDetails","AirportForm","AirportList","AirportDetails","FlightForm","FlightList","FlightDetails","PassengerForm","PassengerList","PassengerDetails","WeatherForm","WeatherList","WeatherDetails","jsxDEV","_jsxDEV","App","_s","cities","setCities","cityById","setCityById","airports","setAirports","airportById","setAirportById","flights","setFlights","flightById","setFlightById","passengers","setPassengers","passengerById","setPassengerById","cityMessage","setCityMessage","airportMessage","setAirportMessage","flightMessage","setFlightMessage","passengerMessage","setPassengerMessage","weatherMessage","setWeatherMessage","fetchCities","fetchAirports","fetchFlights","fetchPassengers","fetchWeather","response","get","setWeather","data","error","console","fetchWeatherByCity","city","setWeatherByCity","fetchLatestWeather","deleteAllWeather","delete","alert","fetchCityById","id","fetchAirportById","fetchFlightById","fetchFlightsByStatus","status","updateFlight","flightRequest","put","deleteFlight","fetchPassengerById","createPassenger","passengerRequest","post","updatePassenger","deletePassenger","className","children","fileName","_jsxFileName","lineNumber","columnNumber","airport","flight","passenger","_c","$RefreshReg$"],"sources":["C:/Users/Patryk/Desktop/Files/Education/PROJEKT/flightmanagement/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport CityForm from './CityForm';\nimport CityList from './CityList';\nimport CityDetails from './CityDetails';\nimport AirportForm from './AirportForm';\nimport AirportList from './AirportList';\nimport AirportDetails from './AirportDetails';\nimport FlightForm from './FlightForm';\nimport FlightList from './FlightList';\nimport FlightDetails from './FlightDetails';\nimport PassengerForm from './PassengerForm';\nimport PassengerList from './PassengerList';\nimport PassengerDetails from './PassengerDetails';\nimport WeatherForm from './WeatherForm'; // Nowy komponent\nimport WeatherList from './WeatherList'; // Nowy komponent\nimport WeatherDetails from './WeatherDetails'; // Nowy komponent\nimport './App.css';\n\nfunction App() {\n    const [cities, setCities] = useState([]);\n    const [cityById, setCityById] = useState(null);\n    const [airports, setAirports] = useState([]);\n    const [airportById, setAirportById] = useState(null);\n    const [flights, setFlights] = useState([]);\n    const [flightById, setFlightById] = useState(null);\n    const [passengers, setPassengers] = useState([]);\n    const [passengerById, setPassengerById] = useState(null);\n    const [cityMessage, setCityMessage] = useState('');\n    const [airportMessage, setAirportMessage] = useState('');\n    const [flightMessage, setFlightMessage] = useState('');\n    const [passengerMessage, setPassengerMessage] = useState('');\n    const [weatherMessage, setWeatherMessage] = useState('');\n\n    useEffect(() => {\n        fetchCities();\n        fetchAirports();\n        fetchFlights();\n        fetchPassengers();\n    }, []);\n\n    const fetchWeather = async () => {\n        try {\n            const response = await axios.get('http://localhost:8080/weather/getAllWeather');\n            setWeather(response.data);\n        } catch (error) {\n            console.error('Błąd pobierania prognoz pogodowych:', error);\n            setWeatherMessage('Nie udało się pobrać danych pogodowych.');\n        }\n    };\n\n    const fetchWeatherByCity = async (city) => {\n        try {\n            const response = await axios.get(`http://localhost:8080/weather/${city}`);\n            setWeatherByCity(response.data);\n        } catch (error) {\n            console.error(`Błąd pobierania pogody dla miasta ${city}:`, error);\n            setWeatherMessage(`Nie udało się pobrać pogody dla miasta ${city}.`);\n        }\n    };\n\n    const fetchLatestWeather = async (city) => {\n        try {\n            const response = await axios.get(`http://localhost:8080/weather/getLatestWeather/${city}`);\n            setWeatherByCity(response.data);\n        } catch (error) {\n            console.error(`Błąd pobierania najnowszej pogody dla miasta ${city}:`, error);\n            setWeatherMessage(`Nie udało się pobrać najnowszej pogody dla miasta ${city}.`);\n        }\n    };\n\n    const deleteAllWeather = async () => {\n        try {\n            await axios.delete('http://localhost:8080/weather/deleteAllWeather');\n            alert('Wszystkie rekordy pogodowe zostały usunięte!');\n            fetchWeather(); // Ponowne pobranie danych po usunięciu\n        } catch (error) {\n            console.error('Błąd podczas usuwania rekordów pogodowych:', error);\n            alert('Nie udało się usunąć wszystkich rekordów pogodowych.');\n        }\n    };\n\n    const fetchCities = async () => {\n        try {\n            const response = await axios.get('http://localhost:8080/cities/getAllCities');\n            setCities(response.data);\n        } catch (error) {\n            console.error('Błąd pobierania miast:', error);\n            setCityMessage('Nie udało się pobrać miast.');\n        }\n    };\n\n    const fetchCityById = async (id) => {\n        try {\n            const response = await axios.get(`http://localhost:8080/cities/getCityById/${id}`);\n            setCityById(response.data);\n        } catch (error) {\n            console.error('Błąd pobierania miasta:', error);\n            setCityMessage('Nie udało się pobrać miasta.');\n        }\n    };\n\n    const fetchAirports = async () => {\n        try {\n            const response = await axios.get('http://localhost:8080/airports/getAllAirports');\n            setAirports(response.data);\n        } catch (error) {\n            console.error('Błąd pobierania lotnisk:', error);\n            setAirportMessage('Nie udało się pobrać lotnisk.');\n        }\n    };\n\n    const fetchAirportById = async (id) => {\n        try {\n            const response = await axios.get(`http://localhost:8080/airports/getAirportById/${id}`);\n            setAirportById(response.data);\n        } catch (error) {\n            console.error('Błąd pobierania lotniska:', error);\n            setAirportMessage('Nie udało się pobrać lotniska.');\n        }\n    };\n\n    const fetchFlights = async () => {\n        try {\n            const response = await axios.get('http://localhost:8080/flights/getAllFlights');\n            setFlights(response.data);\n        } catch (error) {\n            console.error('Błąd pobierania lotów:', error);\n            setFlightMessage('Nie udało się pobrać lotów.');\n        }\n    };\n\n    const fetchFlightById = async (id) => {\n        try {\n            const response = await axios.get(`http://localhost:8080/flights/getFlightById/${id}`);\n            setFlightById(response.data);\n        } catch (error) {\n            console.error('Błąd pobierania lotu:', error);\n            setFlightMessage('Nie udało się pobrać lotu.');\n        }\n    };\n\n    const fetchFlightsByStatus = async (status) => {\n        try {\n            const response = await axios.get(`http://localhost:8080/flights/getFlightsByStatus/${status}`);\n            setFlights(response.data);\n        } catch (error) {\n            console.error('Błąd pobierania lotów po statusie:', error);\n            setFlightMessage('Nie udało się pobrać lotów po statusie.');\n        }\n    };\n\n    const updateFlight = async (id, flightRequest) => {\n        try {\n            const response = await axios.put(`http://localhost:8080/flights/update/${id}`, flightRequest);\n            setFlightById(response.data);\n            alert('Lot zaktualizowany!');\n        } catch (error) {\n            console.error('Błąd podczas aktualizowania lotu:', error);\n            alert('Nie udało się zaktualizować lotu.');\n        }\n    };\n\n    const deleteFlight = async (id) => {\n        try {\n            await axios.delete(`http://localhost:8080/flights/delete/${id}`);\n            setFlightById(null);\n            alert('Lot usunięty!');\n            fetchFlights(); // Ponowne załadowanie listy lotów\n        } catch (error) {\n            console.error('Błąd podczas usuwania lotu:', error);\n            alert('Nie udało się usunąć lotu.');\n        }\n    };\n\n    // Pasażerowie\n    const fetchPassengers = async () => {\n        try {\n            const response = await axios.get('http://localhost:8080/passengers/getAllPassengers');\n            setPassengers(response.data);\n        } catch (error) {\n            console.error('Błąd pobierania pasażerów:', error);\n            setPassengerMessage('Nie udało się pobrać pasażerów.');\n        }\n    };\n\n    const fetchPassengerById = async (id) => {\n        try {\n            const response = await axios.get(`http://localhost:8080/passengers/getPassengerById/${id}`);\n            setPassengerById(response.data);\n        } catch (error) {\n            console.error('Błąd pobierania pasażera:', error);\n            setPassengerMessage('Nie udało się pobrać pasażera.');\n        }\n    };\n\n    const createPassenger = async (passengerRequest) => {\n        try {\n            const response = await axios.post('http://localhost:8080/passengers/create', passengerRequest);\n            alert('Pasażer został dodany!');\n            fetchPassengers(); // Odświeżenie listy pasażerów po dodaniu\n        } catch (error) {\n            console.error('Błąd podczas dodawania pasażera:', error);\n            alert('Nie udało się dodać pasażera.');\n        }\n    };\n\n    const updatePassenger = async (id, passengerRequest) => {\n        try {\n            const response = await axios.put(`http://localhost:8080/passengers/update/${id}`, passengerRequest);\n            alert('Pasażer został zaktualizowany!');\n            fetchPassengerById(id); // Odświeżenie danych pasażera\n        } catch (error) {\n            console.error('Błąd podczas aktualizowania pasażera:', error);\n            alert('Nie udało się zaktualizować pasażera.');\n        }\n    };\n\n    const deletePassenger = async (id) => {\n        try {\n            await axios.delete(`http://localhost:8080/passengers/delete/${id}`);\n            alert('Pasażer został usunięty!');\n            fetchPassengers(); // Odświeżenie listy po usunięciu\n        } catch (error) {\n            console.error('Błąd podczas usuwania pasażera:', error);\n            alert('Nie udało się usunąć pasażera.');\n        }\n    };\n\n    return (\n        <div className=\"App\">\n            <div className=\"left-column\">\n                <h1>Miasta</h1>\n                {cityMessage && <p>{cityMessage}</p>}\n                <CityList cities={cities} />\n                <CityForm fetchCities={fetchCities} />\n                <CityDetails fetchCityById={fetchCityById} city={cityById} />\n            </div>\n\n            <div className=\"right-column\">\n                <h1>Lotniska</h1>\n                {airportMessage && <p>{airportMessage}</p>}\n                <AirportList airports={airports} />\n                <AirportForm fetchAirports={fetchAirports} />\n                <AirportDetails fetchAirportById={fetchAirportById} airport={airportById} />\n            </div>\n\n            <div className=\"bottom-row\">\n                <h1>Loty</h1>\n                {flightMessage && <p>{flightMessage}</p>}\n                <FlightList flights={flights} />\n                <FlightForm fetchFlights={fetchFlights} />\n                <FlightDetails\n                    fetchFlightById={fetchFlightById}\n                    flight={flightById}\n                    updateFlight={updateFlight}\n                    deleteFlight={deleteFlight} // Przekazanie funkcji usuwania lotu\n                    fetchFlightsByStatus={fetchFlightsByStatus}\n                />\n            </div>\n\n            <div className=\"bottom-row\">\n                <h1>Pasażerowie</h1>\n                {passengerMessage && <p>{passengerMessage}</p>}\n                <PassengerList passengers={passengers} fetchPassengerById={fetchPassengerById} deletePassenger={deletePassenger} />\n                <PassengerForm createPassenger={createPassenger} />\n                <PassengerDetails passenger={passengerById} updatePassenger={updatePassenger} />\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}